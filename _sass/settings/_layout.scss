@import 'spacing';
@import 'radius';
@import 'zindex';

// ## Layout Settings
// This file contains the layout settings for the project.
// It includes settings for containers, grid system, and breakpoints to ensure a consistent and responsive design.
// The layout settings are defined using SASS variables and mixins for easy customization and maintenance.
// These settings are used throughout the project to create a uniform layout across different screen sizes.

// ### Container Widths
// Defines the maximum widths for containers at various breakpoints.
// These values ensure that content is properly constrained and readable on different devices.
$container-sm: 540px; // Small container width (e.g., phones)
$container-md: 720px; // Medium container width (e.g., tablets)
$container-lg: 960px; // Large container width (e.g., desktops)
$container-xl: 1140px; // Extra-large container width (e.g., large desktops)

// ### Grid Gutter
// Defines the default spacing between grid columns.
// This value is used to create consistent spacing in the grid system.
$grid-gutter-width: 30px; // Default gutter width for grid spacing

// ### Breakpoints
// Defines the breakpoints for responsive design.
// These values are used in media queries to adapt layouts to different screen sizes.
$breakpoint-sm: 576px; // Small devices (e.g., phones)
$breakpoint-md: 768px; // Medium devices (e.g., tablets)
$breakpoint-lg: 992px; // Large devices (e.g., desktops)
$breakpoint-xl: 1200px; // Extra-large devices (e.g., large desktops)

// ### Component Dimensions
// Defines specific dimensions for components to ensure consistency across the design system.
$hero-figure-width: 180px; // Default width for hero figure
$filter-min-width: 200px; // Minimum width for filter controls

// ### Mixin for Containers
// A reusable mixin for creating responsive containers with a maximum width.
// This mixin ensures that containers are centered and have appropriate padding.

@mixin container($max-width) {

  inline-size: 100%; // Full width by default
  margin: 0 auto; // Center the container horizontally
  max-inline-size: $max-width; // Limit the width to the specified max-width
  padding: 0 $grid-gutter-width / 2; // Add horizontal padding using half the gutter width
}

// Overlay-specific sizing
$overlay-max-width: $container-xl !default; // or 98vw for full width
$overlay-padding: $spacing-lg !default;
$overlay-border-radius: $border-radius-lg !default;
$overlay-z-index: $z-index-toast !default;