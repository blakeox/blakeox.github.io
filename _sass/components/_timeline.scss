// ## Timeline Styles
// This file contains styles for the timeline component, which is used to display chronological events or milestones.
// The timeline is designed to be visually appealing, responsive, and consistent with the overall design system.
// SASS variables are used for colors, spacing, and typography to ensure maintainability and easy updates.

.timeline {
  // ### Timeline Container
  // - **Purpose:** Acts as the main container for the timeline component.
  // - **Structure:** Contains individual timeline items.

  .timeline-item {
    // ### Timeline Item
    // - **display:** Uses flexbox for horizontal alignment of elements.
    // - **gap:** Adds spacing between the year and content.
    // - **margin-bottom:** Adds vertical spacing between timeline items.
    @extend .flex;
    @extend .flex-column;
    @extend .align-center;
    text-align: center;
    gap: $spacing-md; // Add spacing between elements using a spacing variable
    margin-bottom: $spacing-lg; // Add bottom margin for spacing
  }

  .timeline-year {
    // ### Timeline Year
    // - **font-weight:** Uses bold font weight to emphasize the year or date.
    // - **color:** Uses the primary color to highlight the year.
    font-weight: $font-weight-bold; // Use bold font weight for emphasis
    color: $color-primary; // Use the primary color for the year
    margin-bottom: $spacing-xs; // Space below year on mobile
  }

  .timeline-content {
    // ### Timeline Content
    // - **Purpose:** Contains the description or details for each timeline item.
    // - **p:** Removes default paragraph margins for a cleaner layout.
    p {
      margin: 0; // Remove default margin for paragraphs
    }
  }

  @include respond-to('sm') {
    .timeline-item {
      @extend .flex;
      @extend .flex-row;
      @extend .align-start;
      @extend .justify-between;
      gap: $spacing-lg; // Increase gap on larger screens
    }
    .timeline-year {
      margin-bottom: 0;
      margin-right: $spacing-md; // Space to the right of year
    }
    .timeline-content {
      flex: 1; // Allow content to fill remaining space
    }
  }

  @media (min-width: $breakpoint-md) {
    .timeline-item:nth-child(odd) {
      @extend .flex;
      @extend .flex-row;
      @extend .justify-between;
      flex-direction: row-reverse; // reverse order for odd items
      text-align: right;

      .timeline-year {
        margin-right: 0;
        margin-left: $spacing-md;
      }
    }
  }
}