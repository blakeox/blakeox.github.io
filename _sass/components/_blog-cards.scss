// ## Blog Cards Styles
// This file contains styles for blog cards used throughout the project.
// Blog cards are used to display blog posts in a grid layout with a consistent design.
// The styles are reusable, customizable, and consistent with the overall design system.
// SASS variables are used for colors, spacing, typography, and transitions to ensure maintainability and easy updates.
// Referenced variables are defined in the settings folder for consistency across the project.

/* stylelint-disable a11y/media-prefers-color-scheme, declaration-property-value-no-unknown, scss/at-extend-no-missing-placeholder */

// ### Blog Grid
// - **.c-blog-cards:** The container for the blog cards, styled as a responsive grid.

.c-blog-cards {
  @media screen and (prefers-reduced-motion: reduce) {
    &__item {

      background: $background-color-light; // Use light background color
      block-size: 100%; // Ensure consistent height for all cards
      border-color: $color-border-light;
      border-radius: $border-radius; // Apply rounded corners
      border-style: solid;
      border-width: 1px;
      box-shadow: $box-shadow-sm; // Add a small shadow for depth
      color: $color-text; // Use standard text color
      display: flex; // Use flexbox for layout
      flex-direction: column; // Stack content vertically
      justify-content: flex-start; // Align items at the top
      padding: $spacing-lg; // Add padding for inner spacing
      transition: none; // Smooth hover effects

      &:hover, &:focus {

        box-shadow: 0 4px 8px rgb(0 0 0 / 0.1); // Add a larger shadow for emphasis
        transform: translateY(-5px); // Slight upward movement
      }
    }
  }
  @media screen and (prefers-color-scheme: light) {
    &__item {

      border-color: $color-border-light;
      border-style: solid;
      border-width: 1px;
    }
  }
  @media screen and (prefers-color-scheme: light) {
    &__item-heading-link {

      transition: color $transition-duration-default ease;
    }
  }
  display: grid; // Use grid layout for responsive design
  gap: $spacing-lg; // Add spacing between grid items
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); // Responsive grid layout
  margin-block: $spacing-lg $spacing-xl; // Add bottom margin for spacing // Add top margin for spacing

  &__item {

    background: $background-color-light; // Use light background color
    block-size: 100%; // Ensure consistent height for all cards
    border-color: $color-border-light;
    border-radius: $border-radius; // Apply rounded corners
    border-style: solid;
    border-width: 1px;
    box-shadow: $box-shadow-sm; // Add a small shadow for depth
    color: $color-text; // Use standard text color
    display: flex; // Use flexbox for layout
    flex-direction: column; // Stack content vertically
    justify-content: flex-start; // Align items at the top
    padding: $spacing-lg; // Add padding for inner spacing
    transition: transform $transition-duration-default ease, box-shadow $transition-duration-default ease; // Smooth hover effects

    &:hover, &:focus {

      box-shadow: 0 4px 8px rgb(0 0 0 / 0.1); // Add a larger shadow for emphasis
      transform: translateY(-5px); // Slight upward movement
    }
  }

  &__item-image {

    block-size: 200px; // Set a consistent height for all images
    border-radius: $border-radius-sm; // Apply small rounded corners
    inline-size: 100%; // Ensure image fills the card width
    margin-block-end: $spacing-md; // Add spacing below the image
    object-fit: cover; // Crop the image to fit the container
  }

  &__item-heading {

    align-items: center; // Vertically center the text
    display: flex; // Use flexbox for alignment
    font-size: $font-size-lg; // Use large font size for titles
    justify-content: center; // Horizontally center the text
    margin-block: $spacing-sm $spacing-md; // Add bottom margin for spacing // Add top margin for spacing
    min-block-size: 3rem; // Ensure consistent vertical space for titles
    text-align: center; // Center-align the title
    &-link {

      color: $color-primary; // Use primary color for links
      text-decoration: none; // Remove underline
      transition: color $transition-duration-default ease;

      &:hover, &:focus {

        color: $color-primary-dark; // Use darker primary color on hover
      }
    }
  }

  &__item-description {

    flex-grow: 1; // Allow the description to take up remaining space
    margin-block-end: $spacing-md; // Add bottom margin for spacing
    text-align: center; // Center-align the description
  }

  &__item-cta {

    @extend .c-btn; // Center-align the button
    align-self: center; // Center-align the button
    margin-block-start: auto; // Push the button to the bottom

    &:hover, &:focus {

      background-color: $color-primary-dark; // Use darker primary color on hover
      transform: translateY(-2px); // Slight upward movement
    }
  }
}